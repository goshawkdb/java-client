// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: capabilities.capnp

package io.goshawkdb.client.capnp;

public final class CapabilitiesCap {
  public static class Capabilities {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Capabilities.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final io.goshawkdb.client.capnp.CapabilitiesCap.ValueCapability getValue() {
        switch(_getShortField(0)) {
          case 0 : return io.goshawkdb.client.capnp.CapabilitiesCap.ValueCapability.NONE;
          case 1 : return io.goshawkdb.client.capnp.CapabilitiesCap.ValueCapability.READ;
          case 2 : return io.goshawkdb.client.capnp.CapabilitiesCap.ValueCapability.WRITE;
          case 3 : return io.goshawkdb.client.capnp.CapabilitiesCap.ValueCapability.READ_WRITE;
          default: return io.goshawkdb.client.capnp.CapabilitiesCap.ValueCapability._NOT_IN_SCHEMA;
        }
      }
      public final void setValue(io.goshawkdb.client.capnp.CapabilitiesCap.ValueCapability value) {
        _setShortField(0, (short)value.ordinal());
      }

      public final References.Builder getReferences() {
        return new Capabilities.References.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final References.Builder initReferences() {
        _setShortField(1,(short)0);
        _setShortField(2,(short)0);
        _clearPointerField(0);
        _clearPointerField(1);
  return new Capabilities.References.Builder(segment, data, pointers, dataSize, pointerCount);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final io.goshawkdb.client.capnp.CapabilitiesCap.ValueCapability getValue() {
        switch(_getShortField(0)) {
          case 0 : return io.goshawkdb.client.capnp.CapabilitiesCap.ValueCapability.NONE;
          case 1 : return io.goshawkdb.client.capnp.CapabilitiesCap.ValueCapability.READ;
          case 2 : return io.goshawkdb.client.capnp.CapabilitiesCap.ValueCapability.WRITE;
          case 3 : return io.goshawkdb.client.capnp.CapabilitiesCap.ValueCapability.READ_WRITE;
          default: return io.goshawkdb.client.capnp.CapabilitiesCap.ValueCapability._NOT_IN_SCHEMA;
        }
      }

      public References.Reader getReferences() {
        return new Capabilities.References.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

    }

    public static class References {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Capabilities.References.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final Read.Builder getRead() {
          return new Capabilities.References.Read.Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final Read.Builder initRead() {
          _setShortField(1,(short)0);
          _clearPointerField(0);
  return new Capabilities.References.Read.Builder(segment, data, pointers, dataSize, pointerCount);
        }

        public final Write.Builder getWrite() {
          return new Capabilities.References.Write.Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final Write.Builder initWrite() {
          _setShortField(2,(short)0);
          _clearPointerField(1);
  return new Capabilities.References.Write.Builder(segment, data, pointers, dataSize, pointerCount);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Read.Reader getRead() {
          return new Capabilities.References.Read.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Write.Reader getWrite() {
          return new Capabilities.References.Write.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public static class Read {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Capabilities.References.Read.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public Which which() {
            switch(_getShortField(1)) {
              case 0 : return Which.ALL;
              case 1 : return Which.ONLY;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean isAll() {
            return which() == Capabilities.References.Read.Which.ALL;
          }
          public final org.capnproto.Void getAll() {
            assert which() == Capabilities.References.Read.Which.ALL:
                        "Must check which() before get()ing a union member.";
            return org.capnproto.Void.VOID;
          }
          public final void setAll(org.capnproto.Void value) {
            _setShortField(1, (short)Capabilities.References.Read.Which.ALL.ordinal());
          }

          public final boolean isOnly() {
            return which() == Capabilities.References.Read.Which.ONLY;
          }
          public final boolean hasOnly() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.PrimitiveList.Int.Builder getOnly() {
            return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
          }
          public final void setOnly(org.capnproto.PrimitiveList.Int.Reader value) {
            _setPointerField(org.capnproto.PrimitiveList.Int.factory, 0, value);
          }
          public final org.capnproto.PrimitiveList.Int.Builder initOnly(int size) {
            return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 0, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public Which which() {
            switch(_getShortField(1)) {
              case 0 : return Which.ALL;
              case 1 : return Which.ONLY;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final boolean isAll() {
            return which() == Capabilities.References.Read.Which.ALL;
          }
          public final org.capnproto.Void getAll() {
            assert which() == Capabilities.References.Read.Which.ALL:
                        "Must check which() before get()ing a union member.";
            return org.capnproto.Void.VOID;
          }

          public final boolean isOnly() {
            return which() == Capabilities.References.Read.Which.ONLY;
          }
          public final boolean hasOnly() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.PrimitiveList.Int.Reader getOnly() {
            return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
          }

        }

        public enum Which {
          ALL,
          ONLY,
          _NOT_IN_SCHEMA,
        }
      }


      public static class Write {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Capabilities.References.Write.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public Which which() {
            switch(_getShortField(2)) {
              case 0 : return Which.ALL;
              case 1 : return Which.ONLY;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean isAll() {
            return which() == Capabilities.References.Write.Which.ALL;
          }
          public final org.capnproto.Void getAll() {
            assert which() == Capabilities.References.Write.Which.ALL:
                        "Must check which() before get()ing a union member.";
            return org.capnproto.Void.VOID;
          }
          public final void setAll(org.capnproto.Void value) {
            _setShortField(2, (short)Capabilities.References.Write.Which.ALL.ordinal());
          }

          public final boolean isOnly() {
            return which() == Capabilities.References.Write.Which.ONLY;
          }
          public final boolean hasOnly() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.PrimitiveList.Int.Builder getOnly() {
            return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 1, null, 0);
          }
          public final void setOnly(org.capnproto.PrimitiveList.Int.Reader value) {
            _setPointerField(org.capnproto.PrimitiveList.Int.factory, 1, value);
          }
          public final org.capnproto.PrimitiveList.Int.Builder initOnly(int size) {
            return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 1, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public Which which() {
            switch(_getShortField(2)) {
              case 0 : return Which.ALL;
              case 1 : return Which.ONLY;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final boolean isAll() {
            return which() == Capabilities.References.Write.Which.ALL;
          }
          public final org.capnproto.Void getAll() {
            assert which() == Capabilities.References.Write.Which.ALL:
                        "Must check which() before get()ing a union member.";
            return org.capnproto.Void.VOID;
          }

          public final boolean isOnly() {
            return which() == Capabilities.References.Write.Which.ONLY;
          }
          public final boolean hasOnly() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.PrimitiveList.Int.Reader getOnly() {
            return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 1, null, 0);
          }

        }

        public enum Which {
          ALL,
          ONLY,
          _NOT_IN_SCHEMA,
        }
      }


    }


  }


  public enum ValueCapability {
    NONE,
    READ,
    WRITE,
    READ_WRITE,
    _NOT_IN_SCHEMA,
  }


public static final class Schemas {
public static final org.capnproto.SegmentReader b_e5db008aacf36734 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0034\u0067\u00f3\u00ac\u008a\u0000\u00db\u00e5" +
   "\u0013\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u008c\u006f\u0065\u0009\u002f\u00fc\u00ba\u00d9" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0002\u0001\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0061\u0070\u0061\u0062\u0069\u006c\u0069" +
   "\u0074\u0069\u0065\u0073\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0043\u0061\u0070\u0061\u0062" +
   "\u0069\u006c\u0069\u0074\u0069\u0065\u0073\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f2\u0096\u00c9\u006a\u00d3\u002f\u009d\u00f9" +
   "\u002d\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0076\u0061\u006c\u0075\u0065\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008e\u0096\u001e\u00a9\u00e8\u00cf\u0093\u0085" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063" +
   "\u0065\u0073\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_f99d2fd36ac996f2 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00f2\u0096\u00c9\u006a\u00d3\u002f\u009d\u00f9" +
   "\u0020\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0034\u0067\u00f3\u00ac\u008a\u0000\u00db\u00e5" +
   "\u0002\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u005a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0061\u0070\u0061\u0062\u0069\u006c\u0069" +
   "\u0074\u0069\u0065\u0073\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0043\u0061\u0070\u0061\u0062" +
   "\u0069\u006c\u0069\u0074\u0069\u0065\u0073\u002e" +
   "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063" +
   "\u0065\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0083\u002a\u00cb\u00fd\u009b\u0090\u0006\u00d2" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u003c\u00d8\u0099\u0092\u0020\u00ae\u00f5" +
   "\u0011\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0061\u0064\u0000\u0000\u0000\u0000" +
   "\u0077\u0072\u0069\u0074\u0065\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d206909bfdcb2a83 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0083\u002a\u00cb\u00fd\u009b\u0090\u0006\u00d2" +
   "\u002b\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00f2\u0096\u00c9\u006a\u00d3\u002f\u009d\u00f9" +
   "\u0002\u0000\u0007\u0000\u0001\u0000\u0002\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0082\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0061\u0070\u0061\u0062\u0069\u006c\u0069" +
   "\u0074\u0069\u0065\u0073\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0043\u0061\u0070\u0061\u0062" +
   "\u0069\u006c\u0069\u0074\u0069\u0065\u0073\u002e" +
   "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063" +
   "\u0065\u0073\u002e\u0072\u0065\u0061\u0064\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0044\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0061\u006c\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u006e\u006c\u0079\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_f5ae209299d83c1c =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u001c\u003c\u00d8\u0099\u0092\u0020\u00ae\u00f5" +
   "\u002b\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00f2\u0096\u00c9\u006a\u00d3\u002f\u009d\u00f9" +
   "\u0002\u0000\u0007\u0000\u0001\u0000\u0002\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u008a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0061\u0070\u0061\u0062\u0069\u006c\u0069" +
   "\u0074\u0069\u0065\u0073\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0043\u0061\u0070\u0061\u0062" +
   "\u0069\u006c\u0069\u0074\u0069\u0065\u0073\u002e" +
   "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063" +
   "\u0065\u0073\u002e\u0077\u0072\u0069\u0074\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0044\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0061\u006c\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u006e\u006c\u0079\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_8593cfe8a91e968e =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u008e\u0096\u001e\u00a9\u00e8\u00cf\u0093\u0085" +
   "\u0013\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u008c\u006f\u0065\u0009\u002f\u00fc\u00ba\u00d9" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u001a\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0067\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0061\u0070\u0061\u0062\u0069\u006c\u0069" +
   "\u0074\u0069\u0065\u0073\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0056\u0061\u006c\u0075\u0065" +
   "\u0043\u0061\u0070\u0061\u0062\u0069\u006c\u0069" +
   "\u0074\u0079\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u006f\u006e\u0065\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0061\u0064\u0000\u0000\u0000\u0000" +
   "\u0077\u0072\u0069\u0074\u0065\u0000\u0000\u0000" +
   "\u0072\u0065\u0061\u0064\u0057\u0072\u0069\u0074" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
}
}

